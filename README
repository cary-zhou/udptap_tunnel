udptap - create TAP device that sends/receives UDP packets to/from configured host.
Supports encryption using mcrypt.

Usage: udptap_tunnel [-6] <localip> <localport> <remotehost> <remoteport>
    Environment variables:
    TUN_DEVICE  /dev/net/tun
    DEV_NAME    name of the device, default tun0
    IFF_TUN     if set, uses point-to-point instead ot TAP.
    
    MCRYPT_KEYFILE  -- turn on encryption, read key from this file
    MCRYPT_KEYSIZE  -- key size in bits, default 256
    MCRYPT_ALGO     -- algorithm, default is twofish. aes256 is rijndael-256
    MCRYPT_MODE     -- mode, default is CBC

IPv6 mode requires "-6" option as argv[1].

Note that each packet is encrypted separately and there is no filtering of invalid packets. Replay-based attacks will work.
Transferring some file using this tunnel's encryption feature is less secure than encrypting the file and then transferring it.

The project is named "udptap_tunnel" because of there is already other udptap on Github.

Usage example:

on server:
  
    IFF_TUN=1 DEV_NAME=udp0 MCRYPT_KEYFILE=/root/my.key udptap_tunnel 0.0.0.0 3443
    ip addr add 192.168.90.1/30 dev udp0
    ip link set udp0 up
    ip link set udp0 mtu 1280

on client:

    IFF_TUN=1 MCRYPT_KEYFILE=/root/my.key DEV_NAME=udp0 udptap_tunnel 0.0.0.0 0 1.2.3.4 3443
    ip link set udp0  up
    ip addr add 192.168.90.2/30 dev udp0
    ip link set ppp8 mtu 1280



For a tool that does not use UDP sockets, but directly sends to Ethernet interface see https://github.com/vi/tap_mcrypt
