tap_mcrypt - create TAP device that sends/receives encrypted packets to interface

It uses EtherType 0x08F4.

Usage: tap_mcrypt plaintext_interface destination_mac_address
Example: tap_mcrypt wlan0 ff:ff:ff:ff:ff:ff
                (note that ff:ff:ff:ff:ff:ff may work bad in Wi-Fi)
    Environment variables:
    TUN_DEVICE  /dev/net/tun
    DEV_NAME    name of the device, default tun%d
    SOURCE_MAC_ADDRESS -- by default use interface's one
    
    MCRYPT_KEYFILE  -- turn on encryption, read key from this file
    MCRYPT_KEYSIZE  -- key size in bits, default 256
    MCRYPT_ALGO     -- algorithm, default is twofish. aes256 is called rijndael-256
    MCRYPT_MODE     -- mode, default is CBC



Note that each packet is encrypted separately and there is no filtering of invalid packets. Replay-based attacks will work.
Transferring some file using this tunnel's encryption feature is less secure than encrypting the file and then transferring it.

For UDP version see https://github.com/vi/udptap_tunnel
